Algoritmo: Son los pasos a seguir para resolver un problema.


Programa: Conjunto de instrucciones que entiende un ordenador para realizar una actividad. Todo programa tiene un objetivo bien definido: un procesador de texto es un programa que permite cargar, modificar e imprimir textos, un programa de ajedrez permite jugar al ajedrez contra el ordenador u otro contrincante humano. La actividad fundamental del programador es resolver problemas empleando el ordenador como herramienta fundamental. Para la resolución de un problema hay que plantear un algoritmo.


Lenguaje de programación: Conjunto de instrucciones que son interpretadas por una computadora para realizar operaciones, mostrar datos por pantalla, sacar listados por impresora, entrar datos por teclado, etc.
Nosotros aprenderemos a programar utilizando el lenguaje de programación JavaScript.
Para desarrollar este curso no requerimos ningún conocimiento de otro lenguaje.

Tipos de variables comunes:

Númericas (entero, decimal)
textos
booleanas (true / false)
objetos
funcion

Diferencia entre "let" y "var"

Ambito: 
    var : tienen ambito de funcion, son accesibles en cualquier funcion que se declara.
    let : tienen ambito de bloque, son accesibles solo en el bloque donde se declaran.

Redeclaración:
    var: son hoisted (elevadas) al principio de la función, pueden ser utilizadas antes de ser declaradas.
    let: no son hoisted, no se pueden utilizar antes de ser declaradas.

Compatibilidad:
    var: es compatible con todas las versiones de JavaScript
    let: es compatible con las versiones de JavaScript 2015 en adelante.

Acumulador:
        un acumulador es un tipo especial de variable que se incrementa o decrementa con valores variables
        durante la ejecución del programa

Funciones:
    Con funciones podemos segmentar un programa en varias partes.
    Frente a un problema, planteamos un algoritmo, éste puede constar de pequeños algoritmos.
    Una función es un conjunto de instrucciones que resuelven una parte del problema y que puede ser 
    utilizado (llamado) desde diferentes partes de un programa.
    Consta de un nombre y parámetros.
    Con el nombre llamamos a la función, es decir, hacemos referencia a la misma.
    Los parámetros son valores que se envían y son indispensables para la resolución del mismo.
    La función realizará alguna operación con los parámetros que le enviamos. Podemos cargar una variable, 
    consultarla, modificarla, imprimirla, etc.

Programación Orientada a Objetos:
    Un objeto es una estructura que contiene tanto las variables (llamadas propiedades) como las funciones 
    que manipulan dichas variables (llamadas métodos). A partir de esta estructura se ha creado un nuevo 
    modelo de programación (la programación orientada a objetos) que atribuye a los mismos propiedades 
    como herencia o polimorfismo. Como veremos, JavaScript simplifica en algo este modelo y hace una 
    programación híbrida entre la programación estructurada y la programación orientada a objetos.

    El modelo de la programación orientada a objetos normal y corriente separa los mismos en dos: 
    clases e instancias (objetos). 
    Las primeras son entes más abstractos que definen un conjunto determinado de objetos. 
    Las segundas son miembros de una clase, poseyendo las mismas propiedades que la clase a la cual 
    pertenecen.

Propiedades y métodos:
    Para acceder a los métodos y propiedades de un objeto debemos utilizar la siguiente sintaxis:

    objeto.propiedad
    objeto.metodo(parametros)

Conceptos Básicos.
    Objetos: Son todas las cosas con identidad propia. Se relacionan entre si. 
    Poseen características (atributos) y tienen responsabilidades (funciones, métodos) que deben cumplir.
    Son ejemplares (instancias) de una clase y conocen a la clase a la cual pertenecen.

Atributos o propiedades: 
    Son las características, cualidades distintivas de cada objeto. Deben ser mínimos para poder realizar 
    todas las operaciones que requiere la aplicación.

Ejemplos de objetos del mundo real:

	- Casa:	
           atributos: tamaño, precio, cantidad de habitaciones, etc.;
	   responsabilidades: comodidad, seguridad, etc.
	- Mesa:	
           atributos: altura, largo, ancho, etc.;
	   responsabilidades: contener elementos.
	- Ventana:
           atributos: tamaño, color, etc.;
	   responsabilidades: abrirse, cerrarse, etc.
Ejemplos de objetos del mundo de la programación:

	- Ventana:	
             atributos: tamaño, color, etc.;
     	     responsabilidades: mostrar título,achicarse
                                etc.
Responsabilidades o Métodos.
    Son las responsabilidades que debe cumplir la clase.
    El objetivo de un método es ejecutar las actividades que tiene encomendada la clase.

    Es un algoritmo (conjunto de operaciones) que se ejecuta en respuesta a un mensaje; respuestas a 
    mensajes para satisfacer peticiones.
    Un método consiste en el nombre de la operación y sus argumentos. El nombre del método identifica una 
    operación que se ejecuta.
    Un método está determinado por la clase del objeto receptor, todos los objetos de una clase usan el 
    mismo método en respuesta a mensajes similares.

    La interpretación de un mensaje (selección del método ejecutado) depende del receptor y puede variar 
    con distintos receptores, es decir, puede variar de una clase a otra.

Clases
    Una clase es un molde para objetos que poseen las mismas características (que pueden recibir los mismos 
    mensajes y responden de la misma manera).

    Una clase es una representación de una idea o concepto. Unidad que encapsula códigos y datos para los 
    métodos (operaciones).
    Todos los ejemplares de una clase se comportan de forma similar (invocan el mismo método) en respuesta 
    a mensajes similares.

    La clase a la cual pertenece un objeto determina el comportamiento del objeto.
    Una clase tiene encomendadas actividades que ejecutan los métodos.

Las clases están definidas por:

	- Atributos (Propiedades),
	- Comportamiento (operaciones o métodos) y
	- Relaciones con otros objetos.
Una aplicación es un conjunto de objetos de determinadas clases.

Acotaciones
    Hemos presentado los conceptos de la programación orientada a objetos, pero no como se codifica los 
    mismos en JavaScript, más adelante en el curso veremos como se plantea una clase, definen objetos, 
    métodos y atributos.

    Esta presentación es necesaria porque vamos a estar utilizando algunas clases que vienen en el núcleo 
    de JavaScript.
